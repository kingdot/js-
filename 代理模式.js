// 代理模式

//代理模式的主要意义是实现功能的解耦，即满足单一职责原则，可以简单的理解为在某个满足单一职责的类外面用与之相同的接口对它包裹一层，进而实现对原类的增强。

//React 中的高阶组件（这里专指属性代理高阶组件）其实就是代理的一种应用，所以也被更准确的叫做属性代理的高阶组件，高阶组件定义与被代理组件一致的 props，这也是实现代理模式的关键 —— 代理和本体接口的一致性。

//代理其实可以说是在不修改被代理对象的前提下对被代理对象的加强。

const proxyFactory = (fn) => {
    // do some thing;
    // ...
    return (...args) => {
        fn.apply(this, args);
    }
};